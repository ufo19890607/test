ib/cxgb3: Move user vendor structures
ib/mlx5: Move and decouple user vendor structures
ib/core: Add more fields to IPv6 flow specification
ib/uverbs: Add more fields to IPv4 flow specification
ib/uverbs: Expose RSS related capabilities
chcr/cxgb4i/cxgbit/rdma/cxgb4: Allocate resources dynamically for all cxgb4 ULD's
libcxgb, iw_cxgb4, cxgbit: add cxgb_mk_rx_data_ack()
libcxgb, iw_cxgb4, cxgbit: add cxgb_mk_abort_rpl()
libcxgb, iw_cxgb4, cxgbit: add cxgb_mk_abort_req()
libcxgb, iw_cxgb4, cxgbit: add cxgb_mk_tid_release()
libcxgb, iw_cxgb4, cxgbit: add cxgb_compute_wscale()
libcxgb, iw_cxgb4, cxgbit: add cxgb_best_mtu()
libcxgb, iw_cxgb4, cxgbit: add cxgb_is_neg_adv()
libcxgb, iw_cxgb4, cxgbit: add cxgb_find_route6()
libcxgb, iw_cxgb4, cxgbit: add cxgb_find_route()
libcxgb, iw_cxgb4, cxgbit: add cxgb_get_4tuple()
{net, ib}/mlx5: Modify QP commands via mlx5 ifc
{net, ib}/mlx5: QP/XRCD commands via mlx5 ifc
{net, ib}/mlx5: MKey/PSV commands via mlx5 ifc
{net,ib}/mlx5: CQ commands via mlx5 ifc
acpi / sysfs: Fix an issue for LoadTable opcode
acpica: tables: Add new table events indicating table installation/uninstallation
acpica: tables: Remove wrong table event macros
enable skx_edac
fanotify: fan_mark_flush: avoid having to provide a fake/invalid fd and path
xfs: don't wrap ID in xfs_dq_get_next_id (Eric Sandeen)
gfs2: Add missing rcu locking for glock lookup
acpi / hotplug / pci: Make device_is_managed_by_native_pciehp() public
acpi / hotplug / pci: Use cached copy of PCI_EXP_SLTCAP_HPC bit
acpi / hotplug / pci: Runtime resume bridges before bus rescans
pci: Put PCIe ports into D3 during suspend
pci / pm: Tune down retryable runtime suspend error messages
acpi / pm: Always enable wakeup GPEs when enabling device wakeup
acpi / pm: Revork the handling of ACPI device wakeup notifications
pm: Create PM workqueue if runtime PM is not configured too
acpi: Clean up inclusions of ACPI header files
x86/xen/kdump: Replace CONFIG_KEXEC with CONFIG_KEXEC_CORE
revert "x86/panic: Replace CONFIG_KEXEC_CORE with CONFIG_KEXEC"
kexec, kconfig: spell "architecture" properly
treewide: use is_vlan_dev() helper function
ptp: add kvm PTP driver
kvm: x86: add KVM_HC_CLOCK_PAIRING hypercall xxxxx
kvmclock: export kvmclock clocksource pointer xxxxx
64: Disable the mm track code during boot stage
kaslr: Fix boot crash with certain memory configurations
kaslr: Allow randomization below the load address
kaslr: Extend kernel image physical address randomization to addresses larger than 4G
kaslr: Randomize virtual address separately
kaslr: Clarify identity map interface
kaslr: Clarify purpose of each get_random_long()
kaslr: Add virtual address choosing function
kaslr: Return earliest overlap when avoiding regions
kaslr: Add 'struct slot_area' to manage random_addr slots
kaslr: Initialize mapping_info every time
kaslr: Build identity mappings on demand
kaslr: Improve comments around the mem_avoid[]
kaslr: Consolidate mem_avoid[]
kaslr: Clean up unused code from old 'run_size' and rename it to 'kernel_total_size'
kaslr: Handle kernel relocations above 2G correctly
kaslr: Warn when KASLR is disabled
kaslr: Drop CONFIG_RANDOMIZE_BASE_MAX_OFFSET
kaslr: Update description for decompressor worst case size
kaslr: Rename "random" to "random_addr"
kaslr: Clarify purpose of kaslr.c
kaslr: Remove unneeded boot_params argument
kaslr: Rename aslr.c to kaslr.c
mm/kaslr: Propagate KASLR status to kernel proper
revert "x86/mm/aslr: Propagate base load address calculation"
mm/aslr: Avoid PAGE_SIZE redefinition for UML subarch
mm/aslr: Propagate base load address calculation
asm/boot: Use already defined KEEP_SEGMENTS macro in head_{32, 64}.S
pm / hibernate: introduce "nohibernate" boot parameter
boot: Rename get_flags() and check_flags() to *_cpuflags()
tasklist_lock: Change from rwlock_t to qrwlock_t
qrwlock: Build wrapper headers and functions on top of qrwlock
locking/qrwlock: Rename functions to queued_*()
locking/pvqspinlock: Block kernel module loading on old kernel
locking/qspinlock: Handle ticket unlock code in old kernel modules
locking/qspinlock: Maintain same kABI signature as ticket locks
locking, qspinlock: Fix spin_is_locked() and spin_unlock_wait()
locking/qspinlock: Fix performance regression under unaccelerated VMs
locking/pvqspinlock: replace xchg() by the more descriptive set_mb()
proc: read mm's {arg, env}_{start, end} with mmap semaphore taken
hugetlb: don't use reserved during VM_SHARED mapping cow
filemap: optimize copy_page_to/from_iter_iovec
vma_merge: fix race vm_page_prot race condition against rmap_walk
proc/maps: replace proc_maps_private->pid with "struct inode *inode"
proc/task_mmu.c: don't use task->mm in m_start() and show_*map()
don't crash when selinux is disabled
tools/power/acpi: Update Intel copyright
acpica: macosx: Fix wrong sem_destroy definition
acpica: macosx: Fix anonymous semaphore implementation
tools/power/acpi: fix typo in printk in ec help message
acpica: Cleanup for all string-to-integer conversions
acpica: clib: Eliminate acpi_os_XXXFile()/acpi_log_error and link clibrary fxxx()/errno/perror() instead
acpica: clib: Add -nostdinc support for EFI layer
acpica: msvc9: Fix <sys/stat.h> inclusion order issue
acpica: clib: Fix wrong mini C library usage
acpica: clib/efi: Fix wrong order of standard integer types/IO handles
acpica: clib: Fix build issues when ACPI_USE_STANDARD_HEADERS is not defined by converting size_t to acpi_size
acpica: acpidump: Fix a duplicate variable definition
acpica: osl: Add correct acpi_gbl_debug_timeout export to allow acpiexec to link
acpica: iasl/disassembler: Add a check for missing filename
acpica: Move all ASCII utilities to a common file
acpica: divergence: remove unwanted spaces for typedef
acpica: utilities: Update for strtoul64 merger
acpica: Add support for QNX 6.6 platform
acpica: getopt: Comment update, no functional change
acpica: core: Major update for code formatting, no functional changes
acpica: iasl: General cleanup of the file suffix #defines
acpica: De-macroize calls to standard C library functions
acpi / acpidump: Update acpidump manual
acpica: acpidump: Convert the default behavior to dump from /sys/firmware/acpi/tables
acpica: acpidump: Allow customized tables to be dumped without accessing /dev/mem
acpica: Add dragon_fly support to unix file mapping file
acpica: Fix a sscanf format string
acpica: unix: Cleanup to use ACPI_TO_INTEGER() to calc page offset
acpica: acpiexec: Do not put STDIN into raw mode unless it is a terminal
acpica: acpidump: Add ACPI 1.0 RSDP support
acpica: acpihelp: Add UUID support, restructure some existing files
acpica: utprint/oslibcfs: cleanup - no functional change
acpica: osl: Update acpidump to reduce source code differences
acpica: utilities: Introduce acpi_log_error() to improve portability
acpica: acpidump: Reduce freopen() invocations to improve portability
acpica: acpidump: Replace file IOs with new APIs to improve portability
acpica: acpidump: Remove exit() from generic layer to improve portability
acpica: acpidump: Add memory/string OSL usage to improve portability
acpica: common: Enhance acpi_getopt() to improve portability
acpica: common: Enhance cm_get_file_size() to improve portability
acpica: application: Enhance ACPI_USAGE_xxx/ACPI_OPTION with acpi_os_printf() to improve portability
acpica: utilities: Add formatted printing APIs
acpica: osl: Add portable file IO to improve portability
acpica: osl: Clean up acpi_os_printf()/acpi_os_vprintf() stubs
acpica: utilities: Cleanup DEFINE_ACPI_GLOBALS by moving acpi_ut_init_global() from utglobal.c to utinit.c
acpica: osl: Update environments to improve portability
acpica: acpidump: Add support for ACPI 1.0 GUID in Linux
acpica: acpidump: Fix repetitive table dump in -n mode
acpica: tables: Add new mechanism to skip NULL entries in RSDT and XSDT
acpica: acpidump: Add support to force using RSDT
acpica: acpidump: Fix truncated RSDP signature validation
acpica: acpidump: Fix code issue in invoking fread in the loop
acpi / tools: Introduce ec_access.c - tool to access the EC
acpica: acpidump: Update man page
acpica: acpidump: Remove old acpidump source
acpica: acpidump: Update Makefile to build acpidump from ACPICA
acpica: acpidump: Cleanup tools/power/acpi makefiles
acpica: Remove bool usage from ACPICA
acpica: tables: Add mechanism to control early table checksum verification
acpica: Fix buffer allocation issue for generic_serial_bus region accesses
acpica: acpidump: Add support to generate acpidump release
acpica: table manager: Split tbinstal.c into two files
acpica: table manager: Misc cleanup and renames, no functional change
acpica: tables: Add acpi_install_table() API for early table installation
acpica: tables: Avoid SSDT installation with acpi_gbl_disable_ssdt_table_load
acpica: tables: Cleanup ACPI_TABLE_ORIGIN_xxx flags
acpica: tables: Fix table checksums verification before installation
acpica: tables: Fix unbalanced table validations
acpica: tables: Clean up split INSTALLED/VALIDATED table state logics
acpica: tables: Fix multiple ACPI_FREE()s around acpi_tb_add_table()
acpica: tables: Fix the issues in handling virtual addressed tables
acpica: Remove indent divergences to reduce maintenance overhead
acpica: Add a missing field for debug dump of mutex objects
acpica: Update use of acpi_os_wait_events_complete interface
acpica: disassembler: Add decoding of Notify() values
acpica: acpidump: Update new structures and add missing file
acpica: disassembler: Add support to decode _HID and _CID values
acpica: unload operator: Emit a warning if and when it is ever used
acpica: Update comments for ACPICA name - no functional change
acpica: utstring: Check array index bound before use
acpica: acpidump: Remove integer types translation protection
acpica: acpidump: Add sparse declarators support
acpica: utilities: Cleanup declarations of the acpi_gbl_debug_file global
acpica: Cleanup the option of forcing the use of the RSDT
acpica: Cleanup asmlinkage for ACPICA APIs
acpica: Update acpidump related header file changes
acpica: Cleanup exception codes
Export acpi_os_get*() functions
acpica: Add new statistics interface
acpica: Add EXPORT_ACPI_INTERFACES macro to external interface modules
acpica: Cleanup memory allocation macros and configurability
acpica: tablemanager: Export acpi_tb_scan_memory_for_rsdp()
acpica: Export acpi_tb_validate_rsdp()
kvm: vmx: use correct vmcs_read/write for guest segment selector/base
kvm: x86: do not save guest-unsupported XSAVE state
kvm: x86: fix emulation of "MOV SS, null selector"
kvm: x86: flush pending lapic jump label updates on module unload
kvm: x86: reset MMU on KVM_SET_VCPU_EVENTS
kvm: x86: check for pic and ioapic presence before use
kvm: x86: drop error recovery in em_jmp_far and em_ret_far
kvm: x86: fix out-of-bounds access in lapic
kvm: x86: fix missed SRCU usage in kvm_lapic_set_vapic_addr
kvm: Disable irq while unregistering user notifier xxxxxxxxx
kvm: nvmx: VMCLEAR an active shadow VMCS after last use
kvm: x86: fix wbinvd_dirty_mask use-after-free
kvm: nvmx: Fix kernel panics induced by illegal INVEPT/INVVPID types
kvm: nvmx: Fix the NMI IDT-vectoring handling xxxxxxxxx
kvm: nvmx: postpone VMCS changes on MSR_IA32_APICBASE write
kvm: nvmx: fix msr bitmaps to prevent L2 from accessing L0 x2APIC
kvm: x86: nvmx: maintain internal copy of current VMCS
kvm: vmx: handle PML full VMEXIT that occurs during event delivery
kvm: nvmx: Fix memory corruption when using VMCS shadowing
kvm: nvmx: vmx instructions: fix segment checks when L1 is in long mode
kvm: async_pf: do not warn on page allocation failures
kvm: x86: fix conversion of addresses to linear in 32-bit protected mode
kvm: vmx: fix the writing POSTED_INTR_NV
kvm: x86: correctly print #AC in traces
kvm: nvmx: check host CR3 on vmentry and vmexit
kvm: nvmx: introduce nested_vmx_load_cr3 and call it on vmentry
kvm: nvmx: propagate errors from prepare_vmcs02
kvm: nvmx: fix CR3 load if L2 uses PAE paging and EPT
kvm: nvmx: support descriptor table exits
kvm: nvmx: invvpid handling improvements
kvm: vmx: clean up declaration of VPID/EPT invalidation types
kvm: x86: drop TSC offsetting kvm_x86_ops to fix KVM_GET/SET_CLOCK
kvm: x86: do not go through vcpu in __get_kvmclock_ns
kvm: x86: introduce get_kvmclock_ns
kvm: x86: initialize kvmclock_offset
revert "acpi / apd: Remove CLK_IS_ROOT"
red hat kabi: Added flag signifying the use of file_operations_extend structure
red hat kabi: Remove the file operations that cause the kABI breakage
red hat kabi: Add new system call to nfs in a kABI compatible way
red hat kabi: introduce new calls to file_operations_extend
red hat kabi: Use #ifndef __GENKSYMS__ to maintain kAPI
nfsd: Implement the COPY call
gfs2: mark the journal idle to fix ro mounts
rhashtable-test: Get rid of previous workaround
taskstats: add nla_nest_cancel() for failure processing between nla_nest_start() and nla_nest_end()
ib/hfi1: Allow for non-double word multiple message sizes for user SDMA
ib/core: Add IPv6 support to flow steering
ib/uverbs: Extend create QP to get RWQ indirection table
ib/uverbs: Introduce RWQ Indirection table
ib/uverbs: Add WQ support
msi: Simplify PCI MSI code by initializing msi_desc.nvec_used earlier
kvm: vmx: enable guest access to LMCE related MSRs
kvm: vmx: validate individual bits of guest MSR_IA32_FEATURE_CONTROL
kvm: vmx: move msr_ia32_feature_control to vcpu_vmx
pci: vmd: Use x86_vector_domain as parent domain
vsock: Use kvfree()
vsock: Introduce vhost_vsock.ko
vsock: Introduce virtio_transport.ko
vsock: Introduce virtio_vsock_common.ko
edac: Add routine to check if MC devices list is empty
edac: Document HW_EVENT_ERR_DEFERRED type
mce/amd: Add system physical address translation for AMD Fam17h
edac: Add LRDDR4 DRAM type
mce/amd: Fix HWID_MCATYPE calculation by grouping arguments
x86/ras: Rename smca_bank_names to smca_names
x86/ras: Simplify SMCA HWID descriptor struct
ras: Simplify SMCA bank descriptor struct
kvm: Add KVM_EXIT_SYSTEM_EVENT to user space API header
xfs: fix format specifier , should be llx and not llu
platform/uv: Clean up the NMI code to match current coding style
platform/uv: Ensure uv_system_init is called when necessary
platform/uv: Initialize PCH GPP_D_0 NMI Pin to be NMI source
platform/uv: Verify NMI action is valid, default is standard
platform/uv: Add basic CPU NMI health check
platform/uv: Add Support for UV4 Hubless NMIs
platform/uv: Add Support for UV4 Hubless systems
platform/uv: Fix 2 socket config problem
platform/uv: Fix panic with missing UVsystab support
sunrpc: Remove unused callback xpo_adjust_wspace()
sunrpc: Change TCP socket space reservation
sunrpc: Add a server side per-connection limit
sunrpc: Micro optimisation for svc_data_ready
sunrpc: Call the default socket callbacks instead of open coding
sunrpc: lock the socket while detaching it
sunrpc: Add tracepoints for dropped and deferred requests
sunrpc: Add a tracepoint for server socket out-of-space conditions
sunrpc: fix xprt leak on xps allocation failure
sunrpc: Clear xpt_bc_xprt if xs_setup_bc_tcp failed
sunrpc: Fix suspicious RCU usage
sunrpc: rpc_clnt_add_xprt setup function for NFS layer
sunrpc: Fix infinite looping in rpc_clnt_iterate_for_each_xprt
sunrpc: Allow addition of new transports to a struct rpc_clnt
sunrpc: Make NFS swap work with multipath
sunrpc: Add a helper to apply a function to all the rpc_clnt's transports
sunrpc: Allow caller to specify the transport to use
sunrpc: Use the multipath iterator to assign a transport to each task
sunrpc: Make rpc_clnt store the multipath iterators
sunrpc: Add a structure to track multiple transports
sunrpc: Make freeing of struct xprt rcu-safe
sunrpc: Uninline xprt_get(); It isn't performance critical
sunrpc: Reorder rpc_task to put waitqueue related info in same cachelines
sunrpc: Remove unused function rpc_task_reset_client
revert "vfs: add lookup_hash() helper"
gfs2: Reduce contention on gfs2_log_lock
gfs2: Inline function meta_lo_add
gfs2: Switch tr_touched to flag in transaction
gfs2: Wake up io waiters whenever a flush is done
gfs2: Made logd daemon take into account log demand
gfs2: Limit number of transaction blocks requested for truncates
fs-cache: Initialise stores_lock in netfs cookie
rapl: reduce message loglevel
x86 / acpi: simplify _acpi_map_lsapic()
kvm: x86: Introduce segmented_write_std
kvm: x86: emulate FXSAVE and FXRSTOR
kvm: x86: add asm_safe wrapper
kvm: x86: save one bit in ctxt->d
kvm: x86: add Align16 instruction flag
debugobjects: track number of kmem_cache_alloc/kmem_cache_free done
Use REQ_FAILFAST_* on metadata writes where appropriate
raid5: change printk() to pr_*()
raid10: change printk() to pr_*()
raid1: change printk() to pr_*()
raid0: replace printk() with pr_*()
multipath: replace printk() with pr_*()
linear: replace printk() with pr_*()
bitmap: change all printk() to pr_*()
documentation: fix wrong value in md.txt
acpi / apd: Add clock frequency for future AMD I2C controller
acpi / apd: Add APM X-Gene ACPI I2C device support
acpi / apd: Remove CLK_IS_ROOT
amd: Add device HID for future AMD GPIO controller
acpica: Add "Windows 2015" string to _OSI support
maintainers: Add entry VFIO based Mediated device drivers
kvm: mmu: try to fix up page faults before giving up
kvm: mmu: prepare to support mapping of VM_IO and VM_PFNMAP frames
perf/x86/uncore: Fix crash by removing bogus event_list[] handling for SNB client uncore IMC
perf/x86: Ensure perf_sched_cb_{inc, dec}() is only called from pmu::{add, del}()
x86/panic: Replace CONFIG_KEXEC_CORE with CONFIG_KEXEC
sched/preempt, locking: Rework local_bh_{dis, en}able()
Set dev->device_rh to NULL after free
kvm: x86: Introducing kvm_x86_ops.apicv_post_state_restore
kvm: x86: Detect and Initialize AVIC support
kvm: split kvm_vcpu_wake_up from kvm_vcpu_kick
kvm: x86: Introducing kvm_x86_ops VCPU blocking/unblocking hooks
kvm: Add kvm_arch_vcpu_{un}blocking callbacks
kvm: x86: Introducing kvm_x86_ops VM init/destroy hooks
kvm: x86: Rename kvm_apic_get_reg to kvm_lapic_get_reg
kvm: x86: Misc LAPIC changes to expose helper functions
ipmi: reserve memio regions separately
dell-smbios: remove find_token_{id, location}()
revert "platform: x86: dell-laptop: Add support for keyboard backlight"
dell-laptop: Mark dell_quirks[] DMI table as __initconst
acpi: Clean up inclusions of ACPI header files
revert "dell-laptop: Remove rfkill code"
dm raid: don't allow "write behind" with raid4_5_6
dm mpath: do not modify *__clone if blk_mq_alloc_request() fails
kvm: nvmx: Allow L1 to intercept software exceptions (#BP and #OF)
libceph: drop len argument of *verify_authorizer_reply()
libceph: remove now unused ceph_*{en, de}crypt*() functions
sunrpc: svc_age_temp_xprts_now should not call setsockopt on non-tcp transports
xen-blkfront: Fix crash if backend doesn't follow the right states
stop_machine: touch_nmi_watchdog() after MULTI_STOP_PREPARE
tick-sched: add housekeeping_mask cpumask
tracing/probes: Add fetch{, _size} member into deref fetch method
tracing/probes: Split [ku]probes_fetch_type_table
